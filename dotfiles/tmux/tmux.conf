# ------------------------------------------------------------------------------
# Bindings
# ------------------------------------------------------------------------------

# Remap prefix key to `C-Space`
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

bind | split-window -h  -c "#{pane_current_path}" # Analog to vim `:vsp`.
bind - split-window -v  -c "#{pane_current_path}" # Analog to vim `:sp`.

# Open new windows in the same directory as the current pane.
bind c new-window -c "#{pane_current_path}"

# Move window (tab) to the left or right
bind-key H swap-window -t -1\; select-window -t -1
bind-key L swap-window -t +1\; select-window -t +1

# No <esc> delay, as this is annoying for Vim.
set -s escape-time 0

set -g mouse on

# Reload this config file.
bind r source-file "~/.config/tmux/tmux.conf"

# ------------------------------------------------------------------------------
# Bindings / Vim compatibility
# ------------------------------------------------------------------------------

# Taken from: `https://github.com/christoomey/vim-tmux-navigator`. 

# The following command acts as a blocklist that disables these bindings on
# selected programs where there might be conflicts. The most important being vim
# where this behavior is complemented by the plugin that can be found under the
# same URL.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

# Switch between panes using `C-h`, `C-j`, `C-k`, and `C-l` respectively.
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# Use `C-\` to switch to the last pane.
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Same behavior for `copy-mode-vi`.
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# ------------------------------------------------------------------------------
# Copy mode key bindings
# ------------------------------------------------------------------------------

# Unbind previous bindings. Otherwise it will not work.
unbind-key -T copy-mode-vi v
unbind-key -T copy-mode-vi 'C-v'

bind-key -T copy-mode-vi 'v'   send -X begin-selection  # Begin selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle # Begin rect-selection
#bind-key -t copy-mode-vi 'y' copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
bind-key p paste-buffer

# ------------------------------------------------------------------------------
# Window Numbers:
# ------------------------------------------------------------------------------

# Start indexing at 1 like the keyboard numbers:
set -g base-index 1
setw -g pane-base-index 1

# Renumber remaining windows after one is closed:
set-option -g renumber-windows on

# ------------------------------------------------------------------------------
# Set terminal window title
# ------------------------------------------------------------------------------

set-option -g set-titles on
set-option -g set-titles-string "#S / #W"

# ------------------------------------------------------------------------------
# Status Bar
# ------------------------------------------------------------------------------

bg_statusbar="colour0"
fg_statusbar="colour7"
bg_highlight="colour6"
fg_highlight="colour0"
bg_current="colour5"
fg_current="colour0"
bg_tab='colour7'
fg_tab="colour0"

set -g status-position top
set -g status-justify left

set -g status-bg $bg_statusbar
set -g status-fg $fg_statusbar

set -g status-left '[#{session_name}] '
set -g status-right '%H:%M'

set -g status-left  '#[bg=#{bg_highlight}, fg=#{fg_highlight}] #{session_name} #[bg=#{bg_statusbar},fg=#{fg_statusbar}] '
set -g status-right '#[bg=#{bg_highlight}, fg=#{fg_highlight}] %H:%M '

set -g window-status-current-format '#[bg=#{bg_current}, fg=#{fg_current}] #I #[bg=#{bg_tab},fg=#{fg_tab}] #W '
set -g window-status-format         '#[bg=#{bg_highlight}, fg=#{fg_highlight}] #I #[bg=#{bg_tab},fg=#{fg_tab}] #W '


# ------------------------------------------------------------------------------
# Terminal colors
# ------------------------------------------------------------------------------

# Add truecolor support
set -ag terminal-overrides ",xterm-256color:RGB"
set -g default-terminal "screen-256color"


# ------------------------------------------------------------------------------
# Reload message
# ------------------------------------------------------------------------------

display-message "tmux.conf was reloaded"
